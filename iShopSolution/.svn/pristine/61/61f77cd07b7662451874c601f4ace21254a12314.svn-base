#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Business.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="iShop")]
	public partial class ShopDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietPhieuDatHang(ChiTietPhieuDatHang instance);
    partial void UpdateChiTietPhieuDatHang(ChiTietPhieuDatHang instance);
    partial void DeleteChiTietPhieuDatHang(ChiTietPhieuDatHang instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertChiTietPhieuNhapHang(ChiTietPhieuNhapHang instance);
    partial void UpdateChiTietPhieuNhapHang(ChiTietPhieuNhapHang instance);
    partial void DeleteChiTietPhieuNhapHang(ChiTietPhieuNhapHang instance);
    partial void InsertGiaBinhQuan(GiaBinhQuan instance);
    partial void UpdateGiaBinhQuan(GiaBinhQuan instance);
    partial void DeleteGiaBinhQuan(GiaBinhQuan instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertPhieuDatHang(PhieuDatHang instance);
    partial void UpdatePhieuDatHang(PhieuDatHang instance);
    partial void DeletePhieuDatHang(PhieuDatHang instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertPhieuNhapHang(PhieuNhapHang instance);
    partial void UpdatePhieuNhapHang(PhieuNhapHang instance);
    partial void DeletePhieuNhapHang(PhieuNhapHang instance);
    #endregion
		
		public ShopDataContext() : 
				base(global::Business.Properties.Settings.Default.iShopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ShopDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietPhieuDatHang> ChiTietPhieuDatHangs
		{
			get
			{
				return this.GetTable<ChiTietPhieuDatHang>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietPhieuNhapHang> ChiTietPhieuNhapHangs
		{
			get
			{
				return this.GetTable<ChiTietPhieuNhapHang>();
			}
		}
		
		public System.Data.Linq.Table<GiaBinhQuan> GiaBinhQuans
		{
			get
			{
				return this.GetTable<GiaBinhQuan>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<PhieuDatHang> PhieuDatHangs
		{
			get
			{
				return this.GetTable<PhieuDatHang>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<PhieuNhapHang> PhieuNhapHangs
		{
			get
			{
				return this.GetTable<PhieuNhapHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuDatHang")]
	public partial class ChiTietPhieuDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDDatHang;
		
		private int _IDSanPham;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<PhieuDatHang> _PhieuDatHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDDatHangChanging(System.Nullable<int> value);
    partial void OnIDDatHangChanged();
    partial void OnIDSanPhamChanging(int value);
    partial void OnIDSanPhamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public ChiTietPhieuDatHang()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._PhieuDatHang = default(EntityRef<PhieuDatHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDatHang", DbType="Int")]
		public System.Nullable<int> IDDatHang
		{
			get
			{
				return this._IDDatHang;
			}
			set
			{
				if ((this._IDDatHang != value))
				{
					if (this._PhieuDatHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDatHangChanging(value);
					this.SendPropertyChanging();
					this._IDDatHang = value;
					this.SendPropertyChanged("IDDatHang");
					this.OnIDDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int NOT NULL")]
		public int IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuDatHang", Storage="_SanPham", ThisKey="IDSanPham", OtherKey="ID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietPhieuDatHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuDatHangs.Add(this);
						this._IDSanPham = value.ID;
					}
					else
					{
						this._IDSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuDatHang_ChiTietPhieuDatHang", Storage="_PhieuDatHang", ThisKey="IDDatHang", OtherKey="ID", IsForeignKey=true)]
		public PhieuDatHang PhieuDatHang
		{
			get
			{
				return this._PhieuDatHang.Entity;
			}
			set
			{
				PhieuDatHang previousValue = this._PhieuDatHang.Entity;
				if (((previousValue != value) 
							|| (this._PhieuDatHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuDatHang.Entity = null;
						previousValue.ChiTietPhieuDatHangs.Remove(this);
					}
					this._PhieuDatHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuDatHangs.Add(this);
						this._IDDatHang = value.ID;
					}
					else
					{
						this._IDDatHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuDatHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaSanPham;
		
		private string _TenSanPham;
		
		private System.Nullable<int> _IDLoaiSanPham;
		
		private string _MoTa;
		
		private string _BaoHanh;
		
		private string _Anh;
		
		private System.Nullable<bool> _Recycle;
		
		private EntitySet<ChiTietPhieuDatHang> _ChiTietPhieuDatHangs;
		
		private EntitySet<ChiTietPhieuNhapHang> _ChiTietPhieuNhapHangs;
		
		private EntitySet<GiaBinhQuan> _GiaBinhQuans;
		
		private EntitySet<Kho> _Khos;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnIDLoaiSanPhamChanging(System.Nullable<int> value);
    partial void OnIDLoaiSanPhamChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnBaoHanhChanging(string value);
    partial void OnBaoHanhChanged();
    partial void OnAnhChanging(string value);
    partial void OnAnhChanged();
    partial void OnRecycleChanging(System.Nullable<bool> value);
    partial void OnRecycleChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietPhieuDatHangs = new EntitySet<ChiTietPhieuDatHang>(new Action<ChiTietPhieuDatHang>(this.attach_ChiTietPhieuDatHangs), new Action<ChiTietPhieuDatHang>(this.detach_ChiTietPhieuDatHangs));
			this._ChiTietPhieuNhapHangs = new EntitySet<ChiTietPhieuNhapHang>(new Action<ChiTietPhieuNhapHang>(this.attach_ChiTietPhieuNhapHangs), new Action<ChiTietPhieuNhapHang>(this.detach_ChiTietPhieuNhapHangs));
			this._GiaBinhQuans = new EntitySet<GiaBinhQuan>(new Action<GiaBinhQuan>(this.attach_GiaBinhQuans), new Action<GiaBinhQuan>(this.detach_GiaBinhQuans));
			this._Khos = new EntitySet<Kho>(new Action<Kho>(this.attach_Khos), new Action<Kho>(this.detach_Khos));
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100)")]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLoaiSanPham", DbType="Int")]
		public System.Nullable<int> IDLoaiSanPham
		{
			get
			{
				return this._IDLoaiSanPham;
			}
			set
			{
				if ((this._IDLoaiSanPham != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLoaiSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDLoaiSanPham = value;
					this.SendPropertyChanged("IDLoaiSanPham");
					this.OnIDLoaiSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaoHanh", DbType="NVarChar(250)")]
		public string BaoHanh
		{
			get
			{
				return this._BaoHanh;
			}
			set
			{
				if ((this._BaoHanh != value))
				{
					this.OnBaoHanhChanging(value);
					this.SendPropertyChanging();
					this._BaoHanh = value;
					this.SendPropertyChanged("BaoHanh");
					this.OnBaoHanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anh", DbType="NVarChar(250)")]
		public string Anh
		{
			get
			{
				return this._Anh;
			}
			set
			{
				if ((this._Anh != value))
				{
					this.OnAnhChanging(value);
					this.SendPropertyChanging();
					this._Anh = value;
					this.SendPropertyChanged("Anh");
					this.OnAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recycle", DbType="Bit")]
		public System.Nullable<bool> Recycle
		{
			get
			{
				return this._Recycle;
			}
			set
			{
				if ((this._Recycle != value))
				{
					this.OnRecycleChanging(value);
					this.SendPropertyChanging();
					this._Recycle = value;
					this.SendPropertyChanged("Recycle");
					this.OnRecycleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuDatHang", Storage="_ChiTietPhieuDatHangs", ThisKey="ID", OtherKey="IDSanPham")]
		public EntitySet<ChiTietPhieuDatHang> ChiTietPhieuDatHangs
		{
			get
			{
				return this._ChiTietPhieuDatHangs;
			}
			set
			{
				this._ChiTietPhieuDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhapHang", Storage="_ChiTietPhieuNhapHangs", ThisKey="ID", OtherKey="IDSanPham")]
		public EntitySet<ChiTietPhieuNhapHang> ChiTietPhieuNhapHangs
		{
			get
			{
				return this._ChiTietPhieuNhapHangs;
			}
			set
			{
				this._ChiTietPhieuNhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GiaBinhQuan", Storage="_GiaBinhQuans", ThisKey="ID", OtherKey="IDSanPham")]
		public EntitySet<GiaBinhQuan> GiaBinhQuans
		{
			get
			{
				return this._GiaBinhQuans;
			}
			set
			{
				this._GiaBinhQuans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Kho", Storage="_Khos", ThisKey="ID", OtherKey="IDSanPham")]
		public EntitySet<Kho> Khos
		{
			get
			{
				return this._Khos;
			}
			set
			{
				this._Khos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="IDLoaiSanPham", OtherKey="ID", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._IDLoaiSanPham = value.ID;
					}
					else
					{
						this._IDLoaiSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuDatHangs(ChiTietPhieuDatHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietPhieuDatHangs(ChiTietPhieuDatHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietPhieuNhapHangs(ChiTietPhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietPhieuNhapHangs(ChiTietPhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_GiaBinhQuans(GiaBinhQuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_GiaBinhQuans(GiaBinhQuan entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietPhieuNhapHang")]
	public partial class ChiTietPhieuNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDSanPham;
		
		private System.Nullable<int> _IDPhieuNhap;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _GiaVon;
		
		private System.Nullable<byte> _Kho;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<PhieuNhapHang> _PhieuNhapHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDSanPhamChanging(System.Nullable<int> value);
    partial void OnIDSanPhamChanged();
    partial void OnIDPhieuNhapChanging(System.Nullable<int> value);
    partial void OnIDPhieuNhapChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaVonChanging(System.Nullable<decimal> value);
    partial void OnGiaVonChanged();
    partial void OnKhoChanging(System.Nullable<byte> value);
    partial void OnKhoChanged();
    #endregion
		
		public ChiTietPhieuNhapHang()
		{
			this._SanPham = default(EntityRef<SanPham>);
			this._PhieuNhapHang = default(EntityRef<PhieuNhapHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int")]
		public System.Nullable<int> IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhieuNhap", DbType="Int")]
		public System.Nullable<int> IDPhieuNhap
		{
			get
			{
				return this._IDPhieuNhap;
			}
			set
			{
				if ((this._IDPhieuNhap != value))
				{
					if (this._PhieuNhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._IDPhieuNhap = value;
					this.SendPropertyChanged("IDPhieuNhap");
					this.OnIDPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaVon", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaVon
		{
			get
			{
				return this._GiaVon;
			}
			set
			{
				if ((this._GiaVon != value))
				{
					this.OnGiaVonChanging(value);
					this.SendPropertyChanging();
					this._GiaVon = value;
					this.SendPropertyChanged("GiaVon");
					this.OnGiaVonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kho", DbType="TinyInt")]
		public System.Nullable<byte> Kho
		{
			get
			{
				return this._Kho;
			}
			set
			{
				if ((this._Kho != value))
				{
					this.OnKhoChanging(value);
					this.SendPropertyChanging();
					this._Kho = value;
					this.SendPropertyChanged("Kho");
					this.OnKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietPhieuNhapHang", Storage="_SanPham", ThisKey="IDSanPham", OtherKey="ID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietPhieuNhapHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhapHangs.Add(this);
						this._IDSanPham = value.ID;
					}
					else
					{
						this._IDSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapHang_ChiTietPhieuNhapHang", Storage="_PhieuNhapHang", ThisKey="IDPhieuNhap", OtherKey="ID", IsForeignKey=true)]
		public PhieuNhapHang PhieuNhapHang
		{
			get
			{
				return this._PhieuNhapHang.Entity;
			}
			set
			{
				PhieuNhapHang previousValue = this._PhieuNhapHang.Entity;
				if (((previousValue != value) 
							|| (this._PhieuNhapHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuNhapHang.Entity = null;
						previousValue.ChiTietPhieuNhapHangs.Remove(this);
					}
					this._PhieuNhapHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietPhieuNhapHangs.Add(this);
						this._IDPhieuNhap = value.ID;
					}
					else
					{
						this._IDPhieuNhap = default(Nullable<int>);
					}
					this.SendPropertyChanged("PhieuNhapHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaBinhQuan")]
	public partial class GiaBinhQuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<decimal> _GiaBinQuan;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private System.Nullable<int> _IDSanPham;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGiaBinQuanChanging(System.Nullable<decimal> value);
    partial void OnGiaBinQuanChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnIDSanPhamChanging(System.Nullable<int> value);
    partial void OnIDSanPhamChanged();
    #endregion
		
		public GiaBinhQuan()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBinQuan", DbType="Money")]
		public System.Nullable<decimal> GiaBinQuan
		{
			get
			{
				return this._GiaBinQuan;
			}
			set
			{
				if ((this._GiaBinQuan != value))
				{
					this.OnGiaBinQuanChanging(value);
					this.SendPropertyChanging();
					this._GiaBinQuan = value;
					this.SendPropertyChanged("GiaBinQuan");
					this.OnGiaBinQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int")]
		public System.Nullable<int> IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GiaBinhQuan", Storage="_SanPham", ThisKey="IDSanPham", OtherKey="ID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.GiaBinhQuans.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.GiaBinhQuans.Add(this);
						this._IDSanPham = value.ID;
					}
					else
					{
						this._IDSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDNhapXuat;
		
		private System.Nullable<bool> _LaPhieuNhap;
		
		private System.Nullable<int> _IDSanPham;
		
		private System.Nullable<int> _SoLuongTonKho;
		
		private System.Nullable<byte> _Kho1;
		
		private System.Nullable<System.DateTime> _ThoiGian;
		
		private System.Nullable<int> _ConHang;
		
		private System.Nullable<int> _SoLuongConLanNhap;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDNhapXuatChanging(System.Nullable<int> value);
    partial void OnIDNhapXuatChanged();
    partial void OnLaPhieuNhapChanging(System.Nullable<bool> value);
    partial void OnLaPhieuNhapChanged();
    partial void OnIDSanPhamChanging(System.Nullable<int> value);
    partial void OnIDSanPhamChanged();
    partial void OnSoLuongTonKhoChanging(System.Nullable<int> value);
    partial void OnSoLuongTonKhoChanged();
    partial void OnKho1Changing(System.Nullable<byte> value);
    partial void OnKho1Changed();
    partial void OnThoiGianChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianChanged();
    partial void OnConHangChanging(System.Nullable<int> value);
    partial void OnConHangChanged();
    partial void OnSoLuongConLanNhapChanging(System.Nullable<int> value);
    partial void OnSoLuongConLanNhapChanged();
    #endregion
		
		public Kho()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNhapXuat", DbType="Int")]
		public System.Nullable<int> IDNhapXuat
		{
			get
			{
				return this._IDNhapXuat;
			}
			set
			{
				if ((this._IDNhapXuat != value))
				{
					this.OnIDNhapXuatChanging(value);
					this.SendPropertyChanging();
					this._IDNhapXuat = value;
					this.SendPropertyChanged("IDNhapXuat");
					this.OnIDNhapXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LaPhieuNhap", DbType="Bit")]
		public System.Nullable<bool> LaPhieuNhap
		{
			get
			{
				return this._LaPhieuNhap;
			}
			set
			{
				if ((this._LaPhieuNhap != value))
				{
					this.OnLaPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._LaPhieuNhap = value;
					this.SendPropertyChanged("LaPhieuNhap");
					this.OnLaPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSanPham", DbType="Int")]
		public System.Nullable<int> IDSanPham
		{
			get
			{
				return this._IDSanPham;
			}
			set
			{
				if ((this._IDSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IDSanPham = value;
					this.SendPropertyChanged("IDSanPham");
					this.OnIDSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTonKho", DbType="Int")]
		public System.Nullable<int> SoLuongTonKho
		{
			get
			{
				return this._SoLuongTonKho;
			}
			set
			{
				if ((this._SoLuongTonKho != value))
				{
					this.OnSoLuongTonKhoChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTonKho = value;
					this.SendPropertyChanged("SoLuongTonKho");
					this.OnSoLuongTonKhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Kho", Storage="_Kho1", DbType="TinyInt")]
		public System.Nullable<byte> Kho1
		{
			get
			{
				return this._Kho1;
			}
			set
			{
				if ((this._Kho1 != value))
				{
					this.OnKho1Changing(value);
					this.SendPropertyChanging();
					this._Kho1 = value;
					this.SendPropertyChanged("Kho1");
					this.OnKho1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGian", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGian
		{
			get
			{
				return this._ThoiGian;
			}
			set
			{
				if ((this._ThoiGian != value))
				{
					this.OnThoiGianChanging(value);
					this.SendPropertyChanging();
					this._ThoiGian = value;
					this.SendPropertyChanged("ThoiGian");
					this.OnThoiGianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConHang", DbType="Int")]
		public System.Nullable<int> ConHang
		{
			get
			{
				return this._ConHang;
			}
			set
			{
				if ((this._ConHang != value))
				{
					this.OnConHangChanging(value);
					this.SendPropertyChanging();
					this._ConHang = value;
					this.SendPropertyChanged("ConHang");
					this.OnConHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongConLanNhap", DbType="Int")]
		public System.Nullable<int> SoLuongConLanNhap
		{
			get
			{
				return this._SoLuongConLanNhap;
			}
			set
			{
				if ((this._SoLuongConLanNhap != value))
				{
					this.OnSoLuongConLanNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongConLanNhap = value;
					this.SendPropertyChanged("SoLuongConLanNhap");
					this.OnSoLuongConLanNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_Kho", Storage="_SanPham", ThisKey="IDSanPham", OtherKey="ID", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.Khos.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.Khos.Add(this);
						this._IDSanPham = value.ID;
					}
					else
					{
						this._IDSanPham = default(Nullable<int>);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaLoaiChanging(string value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(150)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="ID", OtherKey="IDLoaiSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuDatHang")]
	public partial class PhieuDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _IDKhachHang;
		
		private System.Nullable<System.DateTime> _ThoiGianDatHang;
		
		private System.Nullable<bool> _Duyet;
		
		private EntitySet<ChiTietPhieuDatHang> _ChiTietPhieuDatHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDKhachHangChanging(System.Nullable<int> value);
    partial void OnIDKhachHangChanged();
    partial void OnThoiGianDatHangChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianDatHangChanged();
    partial void OnDuyetChanging(System.Nullable<bool> value);
    partial void OnDuyetChanged();
    #endregion
		
		public PhieuDatHang()
		{
			this._ChiTietPhieuDatHangs = new EntitySet<ChiTietPhieuDatHang>(new Action<ChiTietPhieuDatHang>(this.attach_ChiTietPhieuDatHangs), new Action<ChiTietPhieuDatHang>(this.detach_ChiTietPhieuDatHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int")]
		public System.Nullable<int> IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianDatHang", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianDatHang
		{
			get
			{
				return this._ThoiGianDatHang;
			}
			set
			{
				if ((this._ThoiGianDatHang != value))
				{
					this.OnThoiGianDatHangChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianDatHang = value;
					this.SendPropertyChanged("ThoiGianDatHang");
					this.OnThoiGianDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duyet", DbType="Bit")]
		public System.Nullable<bool> Duyet
		{
			get
			{
				return this._Duyet;
			}
			set
			{
				if ((this._Duyet != value))
				{
					this.OnDuyetChanging(value);
					this.SendPropertyChanging();
					this._Duyet = value;
					this.SendPropertyChanged("Duyet");
					this.OnDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuDatHang_ChiTietPhieuDatHang", Storage="_ChiTietPhieuDatHangs", ThisKey="ID", OtherKey="IDDatHang")]
		public EntitySet<ChiTietPhieuDatHang> ChiTietPhieuDatHangs
		{
			get
			{
				return this._ChiTietPhieuDatHangs;
			}
			set
			{
				this._ChiTietPhieuDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuDatHang", Storage="_KhachHang", ThisKey="IDKhachHang", OtherKey="ID", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhieuDatHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhieuDatHangs.Add(this);
						this._IDKhachHang = value.ID;
					}
					else
					{
						this._IDKhachHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuDatHangs(ChiTietPhieuDatHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuDatHang = this;
		}
		
		private void detach_ChiTietPhieuDatHangs(ChiTietPhieuDatHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuDatHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _HoTen;
		
		private string _SoDienThoai;
		
		private string _DiaChi;
		
		private string _CMND;
		
		private string _Email;
		
		private EntitySet<PhieuDatHang> _PhieuDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public KhachHang()
		{
			this._PhieuDatHangs = new EntitySet<PhieuDatHang>(new Action<PhieuDatHang>(this.attach_PhieuDatHangs), new Action<PhieuDatHang>(this.detach_PhieuDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(250)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(20)")]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuDatHang", Storage="_PhieuDatHangs", ThisKey="ID", OtherKey="IDKhachHang")]
		public EntitySet<PhieuDatHang> PhieuDatHangs
		{
			get
			{
				return this._PhieuDatHangs;
			}
			set
			{
				this._PhieuDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuDatHangs(PhieuDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhieuDatHangs(PhieuDatHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuNhapHang")]
	public partial class PhieuNhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _ThoiGianNhap;
		
		private System.Nullable<bool> _TrangThai;
		
		private System.Nullable<int> _IDPhieuNhap;
		
		private EntitySet<ChiTietPhieuNhapHang> _ChiTietPhieuNhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnThoiGianNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianNhapChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnIDPhieuNhapChanging(System.Nullable<int> value);
    partial void OnIDPhieuNhapChanged();
    #endregion
		
		public PhieuNhapHang()
		{
			this._ChiTietPhieuNhapHangs = new EntitySet<ChiTietPhieuNhapHang>(new Action<ChiTietPhieuNhapHang>(this.attach_ChiTietPhieuNhapHangs), new Action<ChiTietPhieuNhapHang>(this.detach_ChiTietPhieuNhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianNhap
		{
			get
			{
				return this._ThoiGianNhap;
			}
			set
			{
				if ((this._ThoiGianNhap != value))
				{
					this.OnThoiGianNhapChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianNhap = value;
					this.SendPropertyChanged("ThoiGianNhap");
					this.OnThoiGianNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhieuNhap", DbType="Int")]
		public System.Nullable<int> IDPhieuNhap
		{
			get
			{
				return this._IDPhieuNhap;
			}
			set
			{
				if ((this._IDPhieuNhap != value))
				{
					this.OnIDPhieuNhapChanging(value);
					this.SendPropertyChanging();
					this._IDPhieuNhap = value;
					this.SendPropertyChanged("IDPhieuNhap");
					this.OnIDPhieuNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuNhapHang_ChiTietPhieuNhapHang", Storage="_ChiTietPhieuNhapHangs", ThisKey="ID", OtherKey="IDPhieuNhap")]
		public EntitySet<ChiTietPhieuNhapHang> ChiTietPhieuNhapHangs
		{
			get
			{
				return this._ChiTietPhieuNhapHangs;
			}
			set
			{
				this._ChiTietPhieuNhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietPhieuNhapHangs(ChiTietPhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapHang = this;
		}
		
		private void detach_ChiTietPhieuNhapHangs(ChiTietPhieuNhapHang entity)
		{
			this.SendPropertyChanging();
			entity.PhieuNhapHang = null;
		}
	}
}
#pragma warning restore 1591
